# -*- coding: utf-8 -*-
"""Credit Card Fraud.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pls4mfvM1vHgym8RkoeWhHBjO1cuJ9mN

Importing Dependencies
"""

import numpy as np
import pandas as pd

"""Data Collection and Data Preprocesisng"""

credit_card_dataset = pd.read_csv('/content/credit_data.csv.csv')

credit_card_dataset.head()

credit_card_dataset.tail()

credit_card_dataset.shape

credit_card_dataset.describe()

credit_card_dataset.info()

credit_card_dataset.isnull().sum()

credit_card_dataset =  credit_card_dataset.dropna()

credit_card_dataset.isnull().sum()

credit_card_dataset['Class'].value_counts()

credit_card_dataset.groupby(['Class']).count()

credit_card_dataset.shape

legit = credit_card_dataset[credit_card_dataset['Class'] == 0]
legit.shape

fraud = credit_card_dataset[credit_card_dataset['Class'] == 1]
fraud.shape

new_legit = legit.sample(n=356, random_state=42)
new_legit.shape

new_dataset = pd.concat([new_legit, fraud], axis=0)

new_dataset.shape

new_dataset.head()

new_dataset.tail()

new_dataset['Class'].value_counts()

#split the features from target
X = new_dataset.drop(columns='Class', axis =1)
Y = new_dataset['Class']

X.shape, Y.shape

X.head()

Y.tail()

#train and test split
from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

#train model
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

model = LogisticRegression(random_state=42)

model.fit(X_train, Y_train)

#Model Evaluation

y_pred = model.predict(X_test)

accuracy = accuracy_score(Y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

print(classification_report(Y_test, y_pred))

# Print the confusion matrix
conf_matrix = confusion_matrix(Y_test, y_pred)
print('Confusion Matrix:')
print(conf_matrix)

